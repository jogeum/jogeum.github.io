{"componentChunkName":"component---src-templates-post-template-js","path":"/post/jpa-와-mybatis를-이용한-데이터-사용","result":{"data":{"markdownRemark":{"html":"<p>앞서 JPA 관련된 이야기를 할때 JPA 와 Mybatis 를 비교하면서 서로의 장점과 단점에 대한 이야기를 나눈 적이 있습니다. 그때 JPA 를 사용함으로써 얻는 가장 큰 이점은 드러나지 않아 파악하기 어려운 Query 구문이 로직으로 도출이 됨으로 인해 향후 유지 보수가 용이 해지며 테스트를 쉽게 할 수 있는 유연한 구조를 얻을 수 있다는 점 이였지만 복잡한 데이터를 집계 한다거나 여러 Entity 간의 관계를 통한 결과를 도출하려고 하는 용도로는 적합하지 않으며 결국은 Query 를 사용해 데이터를 가지고 올 수 밖에는 없는데 이를 위해 Mybatis 와 JPA 가 같이 사용해야 된다는 점을 이야기 드렸습니다.</p>\n<p>이번 글에는 이전 JPA 가 설정된 동일한 소스 코드에 어떻게 MyBatis 를 사용 하는지에 대한 이야기를 해 보려 합니다.</p>\n<p>먼저 MyBatis 는 Framework 이 아니라 SQL Query Template Library 라는 것을 기억해야 합니다. 개발자가 동적 Query 를 쉽게 작성할 수 있게 관리를 도와주는 Library 이며 MyBatis 자체로는 Query 작성에 아무런 도움을 주진 않습니다. 결국 개발자가 데이터베이스의 특징에 맞는 SQL Query 를 정확하게 이해하고 있어야만 Query 를 작성할 수 있는데 이 때문에 역설적으로 데이터베이스 특성에 맞춘 속도 최적화 같은 작업을 할 수 있게 되는 것 입니다. 물론 그렇기 때문에 발생되는 코드의 관리 비효율은 감안해야 합니다.</p>\n<p>물론 JPA 로 동적 쿼리를 작성할 수 없는 것은 아닙니다. JPA 표준 으로 Creteria 라는 문법이 존재하며 보다 명확한 문법을 제시하는 QueryDSL 같은 Library 도 존재합니다. 하지만 복잡한 데이터를 가지고 올 때 어디까지 JPA 로 개발 하며 어디부터 MyBatis 로 개발 해야 되는지에 대한 기준은 매우 모호하며 이것은 개발자의 경험에 의존 할 수 밖에는 없다고 봅니다. </p>\n<p>개인적인 기준을 이야기 드리자면 리팩토링 법칙 중 2번 이상 반복이 된다면 공통 기능으로 도출해야 된다는 법칙에 의해 2개 이상의 테이블과 조인이 되어야 한다면 MyBatis 로 Query 를 작성해라 고 이야기 드릴 것 같습니다.</p>\n<hr>\n<h2>PostViewMapper.xml</h2>\n<p>먼저 MySQL 데이터베이스의 특성에 맞는 SQL Query 구문을 이용해 Post Entity 의 조회 Mapper xml 를 작성해 보겠습니다. 원래 명칭은 PostMapper 로 지정 하는 것이 맞겠지만 JPA 와 구분을 위해 PostViewMapper 로 작성 하였습니다. 구문은 단순 조회 용 Query 이며 <strong>post</strong> 와 연관이 있는 <strong>category, post<em>detail, post</em>tag</strong> 테이블과 함께 JOIN 으로 데이터를 질의해 데이터를 가지고 오는 속도를 향상 시켰습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token doctype\">&lt;!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mapper</span> <span class=\"token attr-name\">namespace</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>net.jogeum.hellojpa.repository.PostViewMapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>sql</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>select<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        select\n            a.id,\n            b.name as category_name,\n            a.title,\n            a.content,\n            c.description,\n            d.tag,\n            a.created_by,\n            a.created_date\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>sql</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>sql</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>from<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        from\n            post a\n            inner join\n                category b\n                on a.category_id = b.id\n            left join\n                post_detail c\n                on a.id = c.post_id\n            left join\n                (\n                    select\n                        e.post_id,\n                        group_concat(e.tag_name) as tag\n                    from\n                        post_tag e\n                    group by\n                        e.post_id\n                ) d\n                on a.id = d.post_id\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>sql</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>sql</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>where<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>where</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>if</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>type != null<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>if</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>type.name() == 'title'<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                    and a.title like concat('%', #{value}, '%')\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>if</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>if</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>type.name() == 'category'<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                    and b.name = #{value}\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>if</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>if</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>type.name() == 'date'<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                    and to_char(a.created_date, 'yyyymmdd') <span class=\"token entity\" title=\"&gt;\">&amp;gt;</span>= #{value}\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>if</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>if</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>type.name() == 'tag'<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n                    and d.tag like concat('%', #{value}, '%')\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>if</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>if</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>where</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>sql</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>sql</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>order<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        order by\n            a.created_date DESC\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>sql</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>getList<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>map<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>net.jogeum.hellojpa.domain.PostView<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>include</span> <span class=\"token attr-name\">refid</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>select<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>include</span> <span class=\"token attr-name\">refid</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>from<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>include</span> <span class=\"token attr-name\">refid</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>where<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>include</span> <span class=\"token attr-name\">refid</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>order<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>getCount<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">parameterType</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>map<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">resultType</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>int<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        select count(*)\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>include</span> <span class=\"token attr-name\">refid</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>from<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>include</span> <span class=\"token attr-name\">refid</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>where<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mapper</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<hr>\n<h2>PostViewMapper</h2>\n<p>JPA 의 Repository interface 에 대응되는 Mapper interface 를 정의합니다. 이때 interface 상단에 <strong>@Mapper</strong> 어노테이션을 정의하면 Mybatis 의 SqlSessionFactory 가 해당 어노테이션을 찾아와 Mapper 의 구현체를 정의하고 관리해 줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Mapper</span>\n<span class=\"token annotation punctuation\">@Repository</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">PostViewMapper</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PostView</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">Integer</span> <span class=\"token function\">getCount</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h2>PostViewService</h2>\n<p>그런 다음 마지막으로 Mapper 를 사용하는 Service 를 작성합니다. Mapper 의 사용은 별다른 구현 없이 Mybatis 의 SqlSessionFactory 가 <strong>@Mapper</strong> 가 정의되어 있는 객체를 찾아와 정의한 구현체를 그대로 사용하면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Slf4j</span>\n<span class=\"token annotation punctuation\">@Service</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PostViewService</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token class-name\">PostViewMapper</span> postViewMapper<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Transactional</span><span class=\"token punctuation\">(</span>rollbackFor <span class=\"token operator\">=</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PostViewDTO</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getList</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PostSearchType</span> type<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> params <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashMap</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            params<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"type\"</span><span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            params<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value\"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> postViewMapper\n                <span class=\"token punctuation\">.</span><span class=\"token function\">getList</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">::</span><span class=\"token function\">dto</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">PostViewDTO</span> <span class=\"token function\">dto</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PostView</span> post<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">DateTimeFormatter</span> formatter <span class=\"token operator\">=</span> <span class=\"token class-name\">DateTimeFormatter</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofPattern</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yyyy-MM-dd HH:mm:ss\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PostViewDTO</span><span class=\"token punctuation\">(</span>\n                post<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                post<span class=\"token punctuation\">.</span><span class=\"token function\">getCategoryName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                post<span class=\"token punctuation\">.</span><span class=\"token function\">getTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                post<span class=\"token punctuation\">.</span><span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                post<span class=\"token punctuation\">.</span><span class=\"token function\">getDescription</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                post<span class=\"token punctuation\">.</span><span class=\"token function\">getTag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                post<span class=\"token punctuation\">.</span><span class=\"token function\">getCreatedBy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                post<span class=\"token punctuation\">.</span><span class=\"token function\">getCreatedDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>formatter<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>소스에서 데이터를 가지고 오는 방법 중 JPA 로 구현된 PostController 와 MyBatis 로 구현된 PostViewController 를 서로 비교해 보면서 확인 하시는 것도 좋을 것 같습니다.</p>\n<hr>\n<h2>소스코드</h2>\n<p>앞서 설명한 JPA 환경 구성과 MyBatis 의 사용 예제에 대한 소스 코드는 아래 주소에서 확인 하실 수 있습니다.</p>\n<p><a href=\"https://github.com/jogeum/hellojpa\">https://github.com/jogeum/hellojpa</a></p>","frontmatter":{"title":"JPA 와 MyBatis를 이용한 데이터 사용","date":"2020/04/18","template":"post","slug":"jpa-와-mybatis를-이용한-데이터-사용","series":"쉽게 이해하고 사용하는 JPA","seriesNo":6,"seriesTotalNo":6,"description":null,"tags":["jpa","mybatis","spring"]}}},"pageContext":{"slug":"jpa-와-mybatis를-이용한-데이터-사용"}}}