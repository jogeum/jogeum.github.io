{"componentChunkName":"component---src-templates-post-template-js","path":"/post/jpa-spring-boot-환경구성하기","result":{"data":{"markdownRemark":{"html":"<h2>개요</h2>\n<p>JPA 는 <strong>java persistence API</strong> 의 약자 이며 java 에서 제공하는 JDBC 와 같은 API spec 을 의미 합니다. JDBC 와 JPA 는 둘다 데이터베이스 와 데이터를 주고 받기 위한 방법을 정의 하였으나 JDBC 는 보다 하위 레벨에서 데이터베이스와 직접 SQL 쿼리를 질의 하는 API 스펙 이며 <strong>JPA 는 ORM API 스펙</strong> 입니다.</p>\n<p>JPA 자체로는 스펙 이기 때문에 JPA 는 아무런 기능을 하지 않으며 내부 구현체는 기본으로  hibernate 가 사용 되고 있습니다. </p>\n<hr>\n<h2>ORM</h2>\n<p>JPA 를 사용하기에 앞서 먼저 ORM 에 대해 알아 보겠습니다. ORM (Object Relational Mapping) 이란 무엇 일까요 ? </p>\n<p>java와 같은 현대 언어는 객체 지향 설계를 사용하고 있습니다. 객체 지향이란 어떤 데이터 모델을 의미를 가지는 단위로 추상화 하는 과정을 거쳐서 재해석 한 객체 라는 단위로 프로그래밍을 한다는 이야기 입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">내가 그의 이름을 불러주기 전에는 \n그는 다만 \n하나의 몸짓에 지나지 않았다. \n\n내가 그의 이름을 불러주었을 때 \n그는 나에게로 와서 \n꽃이 되었다. \n\n김춘수 -꽃-</code></pre></div>\n<p>갑자기 JPA 를 설명하다 김춘수님의 꽃이라는 시를 인용 했는데 개인적으로 생각 할때 객체 지향을 설명하기에 이보다 더 적합한 내용은 없다고 생각합니다. 이것은 <strong>어떤 대상을 내게 의미를 가지는 단위로 재해석 하여 모델링</strong>을 한다는 것 입니다.</p>\n<p>하지만 일반적으로 데이터를 영속화와 하고 관리하기 위해 사용하는 데이터베이스는 관계형 입니다. 데이터 모델을 정규화 과정을 거쳐 중복된 데이터를 제거하고 의미를 가지는 단위까지 분해시킨 <strong>테이블</strong>을 ****기본 단위로 데이터를 관리 합니다.</p>\n<p>데이터를 바라보는 관점에서 객체지향 설계나 관계형 설계가 서로 비슷한 입장이지만 객체지향은 데이터가 가지는 속성의 추상화에 맞춰져 있다면 관계형 데이터베이스 설계는 최대한 데이터의 중복을 제거하는 정규화에 맞춰져 있습니다.</p>\n<p>이렇게 서로 미묘하게 다른 부분을 객체지향으로 변환해 보자는 것이 ORM 의 기본 방향 입니다.</p>\n<hr>\n<h2>JPA</h2>\n<p>JPA 는 앞서 API 스펙이라고 이야기 드렸습니다. 이와 마찬가지로 JDBC 도 API 스펙이며 JAVA 에서는 JDBC 를 이용해 데이터베이스에 SQL 언어로 질의를 할 수 있습니다.</p>\n<p>JPA 는 이렇게 SQL 언어로 질의하는 과정을 생략하고 단순히 객체를 조회하는 것만으로 데이터베이스의 데이터를 가지고 올 수 있게 해줍니다. 물론 내부적으로는 JDBC API 를 사용 합니다.</p>\n<p>SQL 언어를 질의하는 과정을 생략할 수 있다는 부분이 아주 중요한데 데이터베이스 제품마다 조금씩 사용하는 SQL 언어가 조금씩 다르기 때문입니다. 그렇기 때문에 데이터베이스 특성에 맞게 조금씩 쿼리를 변경을 해줘야 하는 과정을  생략 할 수 있고 JPA 는 오로지 데이터 자체에만 집중을 할 수 있게 해줍니다.</p>\n<hr>\n<h2>MyBatis vs JPA</h2>\n<p>MyBatis 와 같은 SQL template 라이브러리를 이용하여 프로젝트를 진행 할때 특정 데이터베이스의 특성을 잘 이해하고 SQL 언어를 사용하는게 익숙하다면 SQL Query 를 튜닝해 높은 성능을 내게 만들 수 있습니다. 또 상대적으로 SQL 언어를 적극적으로 활용한 비지니스 로직(PL-SQL 과 같은) 을 사용해 실제 JAVA 단의 비지니스 로직을 단순하게 작성할 수 있다는 특징이 있습니다. </p>\n<p>하지만 이 방법은 문제가 있는데 특정 데이터베이스에 종속적인 구문 (PL-SQL) 때문에 비지니스 로직이 한눈에 들어나지 않고 프로그램이 변경에 유연하지 않게 되는 부분 입니다.</p>\n<p>물론 JPA가 개발하면서 발생되는 모든 문제를 해결해 줄 수 없습니다. 하지만 데이터와 로직을 명확하게 분리하여 관리할 수 있게 해주고 저수준 JDBC API 를 직접 질의해 데이터를 조작하지 않으며 데이터와 비지니스 로직에 좀 더 집중할 수 있게 해 줄 수 있습니다. </p>\n<p>무엇보다 JPA 로 개발하는 것이 익숙해지면 보다 신경 써야 되는 부분이 상대적으로 적어지기 때문에 빠른 속도로 개발 할 수 있게 됩니다. 하지만 데이터베이스의 특성을 이해하지 않고 JPA 를 사용 한다면 적정한 속도를 보장할 수 없다는 점을 유의해야 합니다. </p>\n<p>먼저 JPA 가 할 수 있는 것과 할 수 없는 것을 살펴보겠습니다.</p>\n<ul>\n<li>\n<p><strong>JPA 가 잘 할 수 있는 것</strong></p>\n<ul>\n<li>JDBC 와 같은 저수준의 API 로 쿼리를 직접 질의하지 않고 데이터를 객체 단위로 관리 할 수 있다.</li>\n<li>비지니스 로직을 데이터베이스에 분산되어 개발하지 않아도 되며 데이타와 비지니스 로직을 서로 적절하게 분리 시킬 수 있다.</li>\n<li>데이터베이스에 대한 종속이 없기 때문에 단위 테스트가 용이 해진다.</li>\n</ul>\n</li>\n<li>\n<p><strong>JPA 가 잘 할 수 없는 것</strong></p>\n<ul>\n<li><strong>통계 자료를 집계해 추출</strong> 한다거나 <strong>배치성 다량의 데이타를 동시에 처리</strong></li>\n<li><strong>동적쿼리</strong> (JPA 상에서 동적쿼리를 작성하기 위해선 creteria, query dsl 과 같은 추가 기능을 사용해 동적 쿼리를 작성 할 수도 있습니다. ) 를 유연하게 작성 할 수 없다.</li>\n</ul>\n</li>\n</ul>\n<p>이렇게 서로의 역할이 명확하게 다르기 때문에 두 가지의 기술이 서로 대체하는 역할이라고 볼 수 없으며 성격에 따라 적절히 분리해 데이터의 <strong>CRUD</strong> (Create, Read, Update, Delete) 처리 중에 복잡한 <strong>R (Read)</strong> 은 <strong>MyBatis</strong> 가 그리고 <strong>단순한 R 과 CUD</strong> 는 <strong>JPA</strong> 에서 처리 하도록 같이 구성을 하는 것이 좋다고 생각합니다. </p>\n<hr>\n<h2>maven 설정</h2>\n<p>JPA 를 사용하기 위해 Spring boot 설정을 진행해 보겠습니다. Start Spring <a href=\"https://start.spring.io\">https://start.spring.io</a> 에서 설정된 기본 라이브러리 구성에서 필요한 내용을 추가 하겠습니다.</p>\n<p>Spring boot 은 <strong>2.0.5.RELEASE</strong>, java 는 <strong>1.8</strong> 을 사용하겠습니다.</p>\n<p>데이터 테스트를 위해 <strong>h2 dbms</strong> 를 추가 하였고 개발을 위해 <strong>lombok</strong> lib 를 추가 하였습니다. 추가로 JPA 와 MyBatis 의 통합 환경을 설정하기 위해 <strong>mybatis-spring-boot-starter</strong> 를 추가 했습니다. MyBatis 는 Spring boot 에 기본적으로 포함되지 않기 때문에 별도로 추가 구성해야 합니다.</p>\n<p><strong>pom.xml</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>project</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://maven.apache.org/POM/4.0.0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span>\n         <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n  ...\n\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>parent</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-parent<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.0.5.RELEASE<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>relativePath</span><span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>parent</span><span class=\"token punctuation\">></span></span>\n\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>properties</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>project.build.sourceEncoding</span><span class=\"token punctuation\">></span></span>UTF-8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>project.build.sourceEncoding</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>project.reporting.outputEncoding</span><span class=\"token punctuation\">></span></span>UTF-8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>project.reporting.outputEncoding</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>java.version</span><span class=\"token punctuation\">></span></span>1.8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>java.version</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>properties</span><span class=\"token punctuation\">></span></span>\n\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-web<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-data-jpa<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.mybatis.spring.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mybatis-spring-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.3.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-devtools<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>runtime<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.h2database<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>h2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>runtime<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.projectlombok<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>lombok<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>optional</span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>optional</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.google.guava<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>guava<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>26.0-jre<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span>\n  ...\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>project</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<hr>\n<h2>데이터소스 설정</h2>\n<p>h2 데이터베이스에 대한 데이터소스 설정을 진행해 봅시다. 데이터소스 라이브러리는 <strong>hikari cp</strong> 를 사용하며 Spring boot 2.0 부터는 <strong>apache common cp</strong> 와 같이 기본으로 사용되는 데이터소스 입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">datasource</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">hikari</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">driver-class-name</span><span class=\"token punctuation\">:</span> org.h2.Driver\n      <span class=\"token key atrule\">jdbc-url</span><span class=\"token punctuation\">:</span> jdbc<span class=\"token punctuation\">:</span>h2<span class=\"token punctuation\">:</span>file<span class=\"token punctuation\">:</span>./db;AUTO_SERVER=TRUE;Mode=MYSQL\n      <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> sa\n      <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">pool-name</span><span class=\"token punctuation\">:</span> hikari<span class=\"token punctuation\">-</span>cp\n      <span class=\"token key atrule\">minimum-idle</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n      <span class=\"token key atrule\">maximum-pool-size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30</span>\n      <span class=\"token key atrule\">connection-test-query</span><span class=\"token punctuation\">:</span> SELECT 1</code></pre></div>\n<p>먼저 데이터베이스 접속 정보를 추가합니다. h2 데이터베이스를 영속적으로 사용하기 위해 <strong>db</strong> 라는 이름으로 데이터베이스 file 을 생성하고 <strong>AUTO_SERVER=TRUE</strong> 설정을 추가하여 여러 프로세스에서 동시에 접근이 가능하도록 설정해 둡니다. 그리고 사용하는 데이터베이스 특성을 <strong>MYSQL</strong> 과 같은 형태로 사용 되게끔 설정을 추가합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">jdbc<span class=\"token punctuation\">:</span>h2<span class=\"token punctuation\">:</span>file<span class=\"token punctuation\">:</span>./db;AUTO_SERVER=TRUE;Mode=MYSQL</code></pre></div>\n<p>그리고 데이터소스의 최소 커낵션 갯수와 최대 커낵션 갯수를 지정합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">minimum-idle</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span>\n<span class=\"token key atrule\">maximum-pool-size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30</span></code></pre></div>\n<p>데이터소스가 가지고 있는 커낵션이 유효한지를 확인하기 위해 확인 쿼리를 설정합니다. 만약 커낵션이 시간이 지나 끊어져 있는 상태라면 해당 커낵션을 버리고 새로운 커낵션을 맺어 최소 커낵션 갯수를 유지 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">connection-test-query</span><span class=\"token punctuation\">:</span> SELECT 1</code></pre></div>\n<p>보다 데이타소스 설정에 정확한 정보를 확인하고 싶으면 아래 주소를 참고해 주세요.</p>\n<p><a href=\"https://github.com/brettwooldridge/HikariCP\">https://github.com/brettwooldridge/HikariCP</a></p>\n<hr>\n<h2>JPA 설정</h2>\n<p>이어서 JPA 관련된 설정을 진행 하겠습니다. 설정은 테스트용으로 진행할 것이기 때문에 기본적인 설정만 진행 하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">...</span>\n  <span class=\"token key atrule\">jpa</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">hibernate</span><span class=\"token punctuation\">:</span>\n\t\t  <span class=\"token key atrule\">ddl-auto</span><span class=\"token punctuation\">:</span> update\n\t\t\t<span class=\"token key atrule\">naming</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">physical-strategy</span><span class=\"token punctuation\">:</span> org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy\n    <span class=\"token key atrule\">show-sql</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></code></pre></div>\n<ul>\n<li>\n<p><strong>hibernate.ddl-auto</strong> 는 Spring 이 시작할때 JPA 에 설정된 내용을 기준으로 db table 을 어떤 방식으로 초기화 시킬 것 인지를 설정하는 값입니다. 각각 <strong>create, create-drop, update, validate, none</strong> 이 있습니다.</p>\n<p>JPA 의 가장 강력하면서도 위험한 기능이며 가능하면 개발 시점에서만 사용하고 운영 시점에는 none 혹은 validate 만 켜놓고 운영 하는게 안전합니다.</p>\n<p><em>TIP. 가능하다면 운영시 사용하는 데이타베이스 계정에는 ddl 을 통해 데이타 조작만 가능하게 설정하고 스키마를 변경하는 dml 조작은 별도의 계정으로 분리하여 운영하는 것이 가장 좋습니다. 왜냐하면 배포가 잘못 진행되었을때 테이블 자체가 삭제 혹은 변경 될 수도 있기 때문입니다.</em></p>\n</li>\n<li>hibernate.naming.physical-strategy 를 통해 논리적 이름을 어떤 식으로 사용 할지를 결정할 수 있습니다. , 디비 오브젝트의 이름을 그대로 적용하는 방식(ImplicitNamingStrategy) 과 underscore 방식의 이름을 자동으로 camelcase 방식의 이름으로 변경해 주는 방식(PhysicalNamingStrategy) 입니다. hibernate 5 부터는 기본값이 PhysicalNamingStrategy 로 되어 있습니다.</li>\n<li><strong>hibernate.show_sql</strong> JPA 가 동작될때 sql 구문을 로그 파일에 노출 시킬지 여부를 결정 합니다.</li>\n</ul>\n<hr>\n<h2>MyBatis 설정</h2>\n<p>앞서 이야기한 것 처럼 MyBatis 는 Spring Boot 기본 설정에 포함되지 않기 때문에 별도의 라이브러리 mybatis-spring-boot-starter 를 추가해 줘야 합니다. MyBatis 의 설정은 <strong>spring</strong> 밑에 추가 되는 것이 아닌 별도의 <strong>mysql</strong> 라는 prefix 를 가지고 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">mybatis</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">configuration</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">map-underscore-to-camel-case</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">jdbc-type-for-null</span><span class=\"token punctuation\">:</span> varchar</code></pre></div>\n<p>설정을 하나씩 확인해 보겠습니다.</p>\n<ul>\n<li>\n<p><strong>mybatis.configuration.map-underscore-to-camel-case : true</strong> 쿼리를 통해 결과 값을 가지고 올때 컬럼명이 underscore 형태로 되어 있는 것을 camel case 로 자동으로 변경해 줍니다. 이는 java 도메인 객체에서 지정한 camel case 속성명으로 자동으로 매칭을 시켜 주는 역할을 하게 됩니다.</p>\n<p>(예: 데이타베이스 컬럼명이 code_name 일때 자동으로 컬럼명을 codeName 으로 변경해 resultType 으로 지정된 java 객체에 반영 됨)</p>\n<p>만약 map-underscore-to-camel-case 가 지정되어 있지 않다면 수동으로 컬럼마다 alias 를 지정해 주던지 mapper xml 에 result map 을 설정해 줘야 합니다.</p>\n</li>\n<li><strong>mybatis.configuration.jdbc-type-for-null : varchar</strong> 데이타베이스 상에 null 을 만나면 varchar 형으로 캐스팅을 해줍니다. MyBatis 가 null 을 만날때 다양한 이유로 에러가 발생되는데 파라미터에 값이 null 이 포함될때 혹은 반환되는 값에 null 이 포함될때 형식을 찾을 수 없다는 에러가 발생되게 됩니다. 이때 null 을 varchar 형으로 캐스팅하여 에러 없이 null 값 자체를 처리할 수 있게 해줍니다.</li>\n</ul>\n<p>다음글에서는 실질적으로 JPA의 특성과 사용방법을 알아보겠습니다.</p>","frontmatter":{"title":"JPA Spring Boot 환경구성하기","date":"2020/04/18","template":"post","slug":"jpa-spring-boot-환경구성하기","series":"쉽게 이해하고 사용하는 JPA","seriesNo":1,"seriesTotalNo":6,"description":null,"tags":["jpa","spring"]}}},"pageContext":{"slug":"jpa-spring-boot-환경구성하기"}}}